name: Cross-Platform KrakenRelay Builds

on:
  push:
    tags:
      - "v*.*.*"   # trigger only when pushing a version tag
  workflow_dispatch:

jobs:
  windows:
    name: ü™ü Build on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller numpy scipy pyqt5 pyqtgraph pyaudio pyyaml

      - name: Build .exe
        run: pyinstaller --onefile --name krakenrelay main.py

      - name: Upload Windows Binary
        uses: actions/upload-artifact@v4
        with:
          name: krakenrelay-windows
          path: dist/krakenrelay.exe

  macos:
    name: üçè Build on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          brew install portaudio
          pip install --upgrade pip
          pip install pyinstaller numpy scipy pyqt5 pyqtgraph pyaudio pyyaml

      - name: Build macOS binary
        run: pyinstaller --onefile --add-binary "/opt/homebrew/lib/libportaudio.2.dylib:." --name krakenrelay main.py

      - name: Upload macOS Binary
        uses: actions/upload-artifact@v4
        with:
          name: krakenrelay-macos
          path: dist/krakenrelay

  linux-docker:
    name: üêß Build Linux Binary + Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build container (multi-stage Dockerfile)
        run: docker build -t krakenrelay .

      - name: Extract Linux binary
        run: |
          id=$(docker create krakenrelay)
          docker cp $id:/usr/local/bin/app ./krakenrelay
          docker rm -v $id

      - name: Upload Linux Binary
        uses: actions/upload-artifact@v4
        with:
          name: krakenrelay-linux
          path: ./krakenrelay

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/krakenrelay:latest
            ghcr.io/${{ github.repository }}/krakenrelay:${{ github.ref_name }}

  release:
    name: üì¶ Publish Release
    runs-on: ubuntu-latest
    needs: [windows, macos, linux-docker]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/krakenrelay-windows/krakenrelay.exe
            artifacts/krakenrelay-macos/krakenrelay
            artifacts/krakenrelay-linux/krakenrelay
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
